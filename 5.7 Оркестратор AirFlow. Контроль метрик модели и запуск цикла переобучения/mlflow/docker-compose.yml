services:
  # S3 для хранения артефактов в MLFlow
  s3_storage:
    restart: always
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z
    container_name: s3_storage
    hostname: s3-storage
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - 9001:9001
    command: server /data{1...2} --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./s3_data/mlflow:/data1
      - ./s3_data/dvc:/data2

  # данный сервис создаёт бакеты в автоматическом режиме
  create_buckets:
    image: minio/mc:RELEASE.2024-11-17T19-35-25Z
    depends_on:
      s3_storage:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://s3-storage:9000 $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY;
      /usr/bin/mc mb myminio/$DVC_S3_BUCKET;
      /usr/bin/mc mb myminio/$MLFLOW_S3_BUCKET;
      /usr/bin/mc policy download myminio/$DVC_S3_BUCKET;
      /usr/bin/mc policy download myminio/$MLFLOW_S3_BUCKET;
      exit 0;
      "

  # БД для хранения всяких метрик и прочего из MLFlow
  db:
    restart: always
    image: postgres:16.3
    container_name: db
    hostname: db
    depends_on:
      - create_buckets
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  # MLFlow server с подключением к БД и S3
  mlflow_server:
    restart: always
    build: ./service/
    container_name: mlflow
    hostname: mlflow
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://s3-storage:9000
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB_NAME} --serve-artifacts --artifacts-destination s3://${MLFLOW_S3_BUCKET}/ --host 0.0.0.0